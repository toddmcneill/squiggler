{"version":3,"sources":["App.module.css","components/Main.module.css","components/Main.js","components/Logo.js","images/instructions1.svg","images/instructions2.svg","components/Instructions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","semiRandom","limit","Math","floor","random","drawRandomSquiggle","ctx","width","height","randomPoints","i","push","x","y","isCurve","indexOrNext","index","indexOrLast","isVerticalSort","sort","a","b","forEach","point","smoothLine","c","d","start","end","moveTo","lineTo","stroke","drawLine","lineWidth","lineCap","firstControl","getFirstControlPoint","secondControl","getSecondControlPoint","bezierCurveTo","strokeStyle","getPoint","sketchElement","current","getBoundingClientRect","top","left","window","pageXOffset","pageYOffset","Main","useState","mouseDown","setMouseDown","pointState","setPointState","useRef","startNewSquiggle","useCallback","canvas","setAttribute","fixCanvasScale","getContext","clearRect","useEffect","onMouseMove","event","newPointState","pageX","pageY","onMouseUp","onTouchMove","touches","length","changedTouches","Container","className","styles","container","drawingArea","ref","onMouseDown","beginPath","onMouseLeave","onTouchStart","onTouchEnd","buttonContainer","Fab","variant","color","onClick","Logo","viewBox","fill","xmlns","strokeWidth","StyledDialogContent","withStyles","root","padding","DialogContent","StyledDialogTitle","DialogTitle","Instructions","isOpen","setIsOpen","page","setPage","localStorage","getItem","img","onboarding1","title","copy","onboarding2","Dialog","open","onBackdropClick","style","marginTop","src","alt","DialogActions","disableSpacing","Typography","gutterBottom","fontSize","Button","setItem","setTimeout","theme","createMuiTheme","palette","primary","main","dark","secondary","App","instructionsOpen","setInstructionsOpen","ThemeProvider","app","header","AppBar","position","Toolbar","headerText","IconButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b44bf155.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"header\":\"App_header__3ZZ1n\",\"headerText\":\"App_headerText__1Yih3\",\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__1DBl6\",\"buttonContainer\":\"Main_buttonContainer__3A4h2\",\"drawingArea\":\"Main_drawingArea__1z_pU\",\"canvas\":\"Main_canvas__38O29\"};","import { useRef, useState, useEffect, useCallback } from 'react'\nimport Fab from '@material-ui/core/Fab'\nimport Container from '@material-ui/core/Container'\nimport AddIcon from '@material-ui/icons/Add'\nimport styles from './Main.module.css'\n\nconst SCALAR = 2\n\nfunction random(limit) {\n  return Math.floor(Math.random() * limit)\n}\n\nfunction semiRandom(limit) {\n  return Math.floor(Math.random() * limit * .8) + limit * .1\n}\n\nfunction drawRandomSquiggle(ctx, width, height) {\n  const randomPoints = []\n  for (let i = 0; i < random(3) + 4; i++) {\n    randomPoints.push({\n      x: semiRandom(width),\n      y: semiRandom(height),\n      isCurve: Math.random() > .5\n    })\n  }\n\n  function indexOrNext (index) {\n    if (randomPoints[index]) {\n      return randomPoints[index]\n    } else if (randomPoints[index + 1]) {\n      return randomPoints[index + 1]\n    } else {\n      return randomPoints[index + 2]\n    }\n  }\n  \n  function indexOrLast (index) {\n    if (randomPoints[index]) {\n      return randomPoints[index]\n    } else if (randomPoints[index - 1]) {\n      return randomPoints[index - 1]\n    } else {\n      return randomPoints[index - 2]\n    }\n  }\n\n  const isVerticalSort = Math.random() > .5\n  randomPoints.sort((a, b) => {\n    if (isVerticalSort) {\n      return b.y - a.y\n    } else {\n      return b.x - a.x\n    }\n  }).forEach((point, i) => {\n    point.isCurve\n      ? smoothLine(ctx, { a: indexOrNext(i - 1), b: indexOrNext(i), c: indexOrLast(i + 1), d: indexOrLast(i + 2)})\n      : drawLine(ctx, point, indexOrLast(i + 1))\n  })\n  // ctx.strokeStyle = penColor\n  ctx.lineWidth = 5 * SCALAR\n  ctx.lineCap = 'round'\n  ctx.stroke()\n}\n\nfunction drawLine(ctx, start, end) {\n  ctx.moveTo(start.x * SCALAR, start.y * SCALAR)\n  ctx.lineTo(end.x * SCALAR, end.y * SCALAR)\n  ctx.stroke()\n}\n\n// Values between 5 and 10 seem to work best. Too high, and it doesn't smooth much. Too low, and it makes swoopy artifacts.\nconst SMOOTHING_FACTOR = 6\n\nexport function getFirstControlPoint({ a, b, c}) {\n  const x = b.x + (c.x - a.x) / SMOOTHING_FACTOR\n  const y = b.y + (c.y - a.y) / SMOOTHING_FACTOR\n  return { x, y }\n}\n\nexport function getSecondControlPoint({ b, c, d}) {\n  const x = c.x + (b.x - d.x) / SMOOTHING_FACTOR\n  const y = c.y + (b.y - d.y) / SMOOTHING_FACTOR\n  return { x, y }\n}\n\nfunction smoothLine(ctx, { a, b, c, d }) {\n  // Draw a line between B and C. Use the slope of the surrounding points to calculate control points.\n  ctx.moveTo(b.x * SCALAR, b.y * SCALAR)\n  const firstControl = getFirstControlPoint({ a, b, c })\n  const secondControl = getSecondControlPoint({ b, c, d })\n  ctx.bezierCurveTo(firstControl.x * SCALAR, firstControl.y * SCALAR, secondControl.x * SCALAR, secondControl.y * SCALAR, c.x * SCALAR, c.y * SCALAR)\n  ctx.strokeStyle = 'black'\n  ctx.lineWidth = 3 * SCALAR\n  ctx.lineCap = 'smooth'\n  ctx.stroke()\n}\n\nfunction getPoint(sketchElement, x, y) {\n  const { top, left } = sketchElement.current.getBoundingClientRect()\n  return { x: x - left - window.pageXOffset, y: y - top - window.pageYOffset }\n}\n\nexport default function Main() {\n  const [mouseDown, setMouseDown] = useState(false)\n  const [pointState, setPointState] = useState({})\n  const sketchElement = useRef()\n\n  const fixCanvasScale = () => {\n    const canvas = sketchElement.current\n    const { width, height } = canvas.getBoundingClientRect()\n    canvas.setAttribute('width', width * SCALAR)\n    canvas.setAttribute('height', height * SCALAR)\n    return { width, height }\n  }\n\n  const startNewSquiggle = useCallback(() => {\n    // Scale canvas to 1:1 with pixel size.\n    const canvas = sketchElement.current\n    const { width, height } = fixCanvasScale()\n\n    // Clear canvas\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, width, height)\n\n    // Draw squiggle\n    drawRandomSquiggle(ctx, width, height)\n  }, [sketchElement])\n\n  // Reset the canvas on window resize to avoid weird offset issues.\n  // It's not the optimal solution, but prevents a pretty confusing bug.\n  // It's disabled for now because it also causes confusing behavior.\n  // useEffect(() => {\n  //   const resizeHandler = () => {\n  //     fixCanvasScale()\n  //     startNewSquiggle()\n  //   }\n  //\n  //   window.addEventListener('resize', resizeHandler)\n  //   return () => {\n  //     window.removeEventListener('resize', resizeHandler)\n  //   }\n  // })\n\n  useEffect(() => {\n    startNewSquiggle()\n  }, [startNewSquiggle])\n\n  const onMouseDown = (event) => {\n    setMouseDown(true)\n    const point = getPoint(sketchElement, event.pageX, event.pageY)\n    setPointState({ b: point, c: point, d: point })\n    sketchElement.current.getContext('2d').beginPath()\n  }\n\n  const onMouseMove = (event) => {\n    if (mouseDown) {\n      const newPointState = { a: pointState.b, b: pointState.c, c: pointState.d, d: getPoint(sketchElement, event.pageX, event.pageY) }\n      smoothLine(sketchElement.current.getContext('2d'), newPointState)\n      setPointState(newPointState)\n    }\n  }\n\n  const onMouseUp = (event) => {\n    onMouseMove(event)\n    onMouseMove(event)\n    setMouseDown(false)\n  }\n\n  const onTouchStart = (event) => {\n    setMouseDown(true)\n    const x = event?.changedTouches?.[0]?.pageX\n    const y = event?.changedTouches?.[0]?.pageY\n    const point = getPoint(sketchElement, x, y)\n    setPointState({ b: point, c: point, d: point })\n  }\n\n  const onTouchMove = (event) => {\n    if (event.touches.length > 1) {\n      return\n    }\n    if (mouseDown) {\n      const x = event?.changedTouches?.[0]?.pageX\n      const y = event?.changedTouches?.[0]?.pageY\n      const newPointState = { a: pointState.b, b: pointState.c, c: pointState.d, d: getPoint(sketchElement, x, y) }\n      smoothLine(sketchElement.current.getContext('2d'), newPointState)\n      setPointState(newPointState)\n    }\n  }\n\n  const onTouchEnd = (event) => {\n    onTouchMove(event)\n    onTouchMove(event)\n    setMouseDown(false)\n  }\n\n  return (\n    <Container className={styles.container}>\n      <div className={styles.drawingArea}>\n        <canvas ref={sketchElement}\n          className={styles.canvas}\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n          onMouseLeave={onMouseUp}\n          onTouchStart={onTouchStart}\n          onTouchMove={onTouchMove}\n          onTouchEnd={onTouchEnd}\n          />\n      </div>\n      <div className={styles.buttonContainer}>\n        <Fab variant='extended' color='secondary' onClick={startNewSquiggle}>\n          <AddIcon />\n          New Squiggle\n        </Fab>\n      </div>\n    </Container>\n  )\n}\n","export default function Logo() {\n  return (\n  <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M17.0934 2.94646C17.0934 2.94646 10.2988 1.42683 8.75689 4.67678C7.46154 7.40707 12.4104 10.0948 10.4488 12.2908C8.4618 14.5152 5.81458 8.5606 3.48503 10.3313C1.03328 12.1949 3.04302 18.7009 3.04302 18.7009\" stroke=\"#4DD0E1\" strokeWidth=\"2\"/>\n  </svg>\n  )\n}","export default __webpack_public_path__ + \"static/media/instructions1.2156b3f2.svg\";","export default __webpack_public_path__ + \"static/media/instructions2.90be4561.svg\";","import { useState, useEffect } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport onboarding1 from '../images/instructions1.svg'\nimport onboarding2 from '../images/instructions2.svg'\n\nconst StyledDialogContent = withStyles({\n  root: {\n    padding: 0,\n  },\n})(DialogContent)\n\nconst StyledDialogTitle = withStyles(() => ({\n  root: {\n    padding: 0\n  }\n}))(DialogTitle)\n\nexport default function Instructions({ isOpen, setIsOpen }) {\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    const shown =  localStorage.getItem('instructionsShown')\n    if (!shown) {\n      setIsOpen(true)\n    }\n  })\n\n  let img = onboarding1\n  let title = 'Welcome to Squiggler!'\n  let copy = 'Kickstart your creativity with simple design exercises that will open your mind and test your imagination'\n  if (page === 2) {\n    img = onboarding2\n    title = 'How it Works.'\n    copy = \"It's simple! Generate a line and then use your creative power to finish the picture. Draw whatever comes to mind. There are no rules.\"\n  }\n\n  return (\n    <Dialog open={isOpen} onBackdropClick={() => setIsOpen(false)}>\n      <StyledDialogContent>\n        <img style={{marginTop: '-20px'}} src={img} width='100%' alt='instructions' />\n      </StyledDialogContent>\n      <DialogActions disableSpacing={true}>\n        <div>\n          <StyledDialogTitle>{title}</StyledDialogTitle>\n          <Typography gutterBottom={true} style={{fontSize: '.9rem'}}>{copy}</Typography>\n        </div>\n        <div>\n          <Button variant='contained' color='secondary' onClick={() => {\n            if (page === 1) {\n              setPage(2)\n            } else {\n              localStorage.setItem('instructionsShown', true)\n              setIsOpen(false)\n              setTimeout(() => {\n                setPage(1)\n              }, 500)\n            }\n          }}>Continue</Button>\n        </div>\n      </DialogActions>\n    </Dialog>\n  )\n}","import { useState } from 'react'\nimport styles from './App.module.css'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Main from './components/Main'\nimport Logo from './components/Logo'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport Instructions from './components/Instructions'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4DD0E1',\n      dark: '#00ACC1'\n    },\n    secondary: {\n      main: '#FFEB3B',\n      dark: '#FDD835'\n    }\n  },\n})\n\nexport default function App() {\n  const [instructionsOpen, setInstructionsOpen] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={styles.app}>\n        <div className={styles.header}>\n          <AppBar color='transparent' position='relative'>\n            <Toolbar>\n              <div className={styles.headerText}>\n                <Logo />\n                squiggler\n              </div>\n              <IconButton onClick={() => setInstructionsOpen(true)}>\n                <HelpOutlineIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div className={styles.main}>\n          <Main />\n        </div>\n      </div>\n    <Instructions isOpen={instructionsOpen} setIsOpen={setInstructionsOpen} />\n    </ThemeProvider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
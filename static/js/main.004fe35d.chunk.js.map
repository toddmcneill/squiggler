{"version":3,"sources":["components/Main.module.css","App.module.css","components/Controls.module.css","components/Drawing.module.css","components/Controls.js","components/Drawing.js","components/Main.js","components/Logo.js","images/instructions1.svg","images/instructions2.svg","components/Instructions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Controls","showSuggestionSwitch","showSuggestion","setShowSuggestion","getSquiggles","className","styles","controls","suggestionControls","FormControlLabel","control","Switch","checked","color","onChange","event","target","label","Button","variant","onClick","randomWithPadding","limit","Math","floor","random","generateRandomSquiggle","width","height","randomPoints","i","push","x","y","isCurve","indexOrNext","index","indexOrLast","isSorted","isVerticalSort","smoothingFactor","sort","a","b","map","point","curveInfo","smoothCurve","c","d","type","rotation","start","end","lineInfo","getFirstControlPoint","getSecondControlPoint","firstControl","secondControl","getPoint","sketchElement","current","getBoundingClientRect","top","left","window","pageXOffset","pageYOffset","rotateCanvas","ctx","centerX","canvas","centerY","rotationRadians","PI","translate","rotate","Drawing","forwardRef","generateSuggestion","useState","mouseDown","setMouseDown","pointState","setPointState","useReducer","state","action","strokes","addStroke","drawnIndex","setDrawnIndex","useEffect","length","canvasRotation","beginPath","currentRotation","forEach","stroke","rotationAdjustment","moveTo","bezierCurveTo","lineTo","rotationAdjustmentReset","drawStrokes","getContext","slice","fillStyle","fillRect","startNewSquiggle","useCallback","setAttribute","clearRect","strokeStyle","lineWidth","lineCap","squiggle","onMouseMove","newPointState","pageX","pageY","onMouseUp","onTouchMove","touches","changedTouches","drawingArea","ref","onMouseDown","onMouseLeave","onTouchStart","onTouchEnd","Main","suggestion","setSuggestion","useRef","setShowSuggestionSwitch","noun","suggestions","localStorageShowSuggestion","localStorage","getItem","drawingKey","setDrawingKey","setRotation","main","Container","shouldShow","setItem","container","buttonContainer","rotateButtonDiv","Fab","rotateButton","size","suggestionText","emptySide","Logo","viewBox","fill","xmlns","strokeWidth","StyledDialogContent","withStyles","root","padding","DialogContent","StyledDialogTitle","DialogTitle","Instructions","isOpen","setIsOpen","page","setPage","img","onboarding1","title","copy","onboarding2","Dialog","open","onBackdropClick","style","marginTop","src","alt","DialogActions","disableSpacing","Typography","gutterBottom","fontSize","setTimeout","theme","createMuiTheme","palette","primary","dark","secondary","App","instructionsOpen","setInstructionsOpen","ThemeProvider","app","header","AppBar","position","Toolbar","headerText","IconButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.004fe35d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__d0wD2\",\"container\":\"Main_container__1DBl6\",\"buttonContainer\":\"Main_buttonContainer__3A4h2\",\"rotateButtonDiv\":\"Main_rotateButtonDiv__37MRG\",\"rotateButton\":\"Main_rotateButton__DSiF8\",\"suggestionText\":\"Main_suggestionText__1Q1mV\",\"emptySide\":\"Main_emptySide__2PlHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"header\":\"App_header__3ZZ1n\",\"headerText\":\"App_headerText__1Yih3\",\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1eluf\",\"suggestionControls\":\"Controls_suggestionControls__3dGgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawingArea\":\"Drawing_drawingArea__j0JI0\",\"canvas\":\"Drawing_canvas__3n_NU\"};","import FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport styles from './Controls.module.css'\n\nexport default function Controls({ showSuggestionSwitch, showSuggestion, setShowSuggestion, getSquiggles }) {\n  const handleSuggestionToggle = (event) => {\n    setShowSuggestion(event.target.checked)\n  }\n\n  return (\n    <div className={styles.controls}>\n      <div className={styles.suggestionControls}>\n        {\n          showSuggestionSwitch &&\n          <FormControlLabel\n            control={\n              <Switch\n                checked={showSuggestion}\n                color='primary'\n                onChange={handleSuggestionToggle}\n              />\n            }\n            label='Include Drawing Prompt'\n          />\n        }\n      </div>\n      <Button variant='contained' color='secondary' onClick={getSquiggles}>\n        Get Squiggles\n      </Button>\n    </div>\n  )\n}","import { forwardRef, useState, useEffect, useCallback, useReducer } from 'react'\nimport styles from './Drawing.module.css'\n\n// Controls the effective resolution of the canvas.\nconst SCALAR = 2\n\nfunction random(limit) {\n  return Math.floor(Math.random() * limit)\n}\n\nfunction randomWithPadding(limit) {\n  // Choose a number within 60% of the limit, with a 20% padding on either side.\n  return Math.floor(Math.random() * limit * .6) + limit * .2\n}\n\nfunction generateRandomSquiggle(width, height) {\n  const randomPoints = []\n  for (let i = 0; i < random(3) + 4; i++) {\n    randomPoints.push({\n      x: randomWithPadding(width),\n      y: randomWithPadding(height),\n      isCurve: Math.random() < .7\n    })\n  }\n\n  function indexOrNext (index) {\n    if (randomPoints[index]) {\n      return randomPoints[index]\n    } else if (randomPoints[index + 1]) {\n      return randomPoints[index + 1]\n    } else {\n      return randomPoints[index + 2]\n    }\n  }\n\n  function indexOrLast (index) {\n    if (randomPoints[index]) {\n      return randomPoints[index]\n    } else if (randomPoints[index - 1]) {\n      return randomPoints[index - 1]\n    } else {\n      return randomPoints[index - 2]\n    }\n  }\n\n  const isSorted = Math.random() < .3\n  const isVerticalSort = Math.random() < .5\n  const smoothingFactor = Math.random() * 5 + 0.5\n  const sortedRandomPoints = randomPoints\n    .sort((a, b) => {\n      if (!isSorted) {\n        return 0\n      }\n      if (isVerticalSort) {\n        return b.y - a.y\n      } else {\n        return b.x - a.x\n      }\n    })\n\n  return sortedRandomPoints.map((point, i) => {\n    if (point.isCurve) {\n      const curveInfo = smoothCurve({ a: indexOrNext(i - 1), b: indexOrNext(i), c: indexOrLast(i + 1), d: indexOrLast(i + 2)}, smoothingFactor)\n      return { type: 'curve', ...curveInfo, rotation: 0 }\n    }\n    const lineInfo = straightLine(point, indexOrLast(i + 1))\n    return { type: 'line', ...lineInfo, rotation: 0 }\n  })\n}\n\nfunction straightLine(start, end) {\n  return {\n    start: { x: start.x * SCALAR, y: start.y * SCALAR },\n    end: { x: end.x * SCALAR, y: end.y * SCALAR },\n  }\n}\n\nexport function getFirstControlPoint({ a, b, c}, smoothingFactor) {\n  const x = b.x + (c.x - a.x) / smoothingFactor\n  const y = b.y + (c.y - a.y) / smoothingFactor\n  return { x, y }\n}\n\nexport function getSecondControlPoint({ b, c, d}, smoothingFactor) {\n  const x = c.x + (b.x - d.x) / smoothingFactor\n  const y = c.y + (b.y - d.y) / smoothingFactor\n  return { x, y }\n}\n\n// Values between 5 and 10 seem to work best. Too high, and it doesn't smooth much. Too low, and it makes swoopy artifacts.\nconst SMOOTHING_FACTOR = 6\n\nfunction smoothCurve({ a, b, c, d }, smoothingFactor = SMOOTHING_FACTOR) {\n  // Draw a line between B and C. Use the slope of the surrounding points to calculate control points.\n\n  const firstControl = getFirstControlPoint({ a, b, c }, smoothingFactor)\n  const secondControl = getSecondControlPoint({ b, c, d }, smoothingFactor)\n\n  return {\n    start: { x: b.x * SCALAR, y: b.y * SCALAR },\n    firstControl: { x: firstControl.x * SCALAR, y: firstControl.y * SCALAR},\n    secondControl: { x: secondControl.x * SCALAR, y: secondControl.y * SCALAR },\n    end: { x: c.x * SCALAR, y: c.y * SCALAR },\n  }\n}\n\nfunction getPoint(sketchElement, x, y) {\n  const { top, left } = sketchElement.current.getBoundingClientRect()\n  return { x: x - left - window.pageXOffset, y: y - top - window.pageYOffset }\n}\n\n\nfunction rotateCanvas(ctx, rotation) {\n  const centerX = ctx.canvas.width / 2\n  const centerY = ctx.canvas.height / 2\n  const rotationRadians = rotation * Math.PI / 180\n  ctx.translate(centerX, centerY)\n  ctx.rotate(rotationRadians)\n  ctx.translate(-1 * centerX, -1 * centerY)\n}\n\nfunction drawStrokes(ctx, strokes, canvasRotation) {\n  ctx.beginPath()\n  let currentRotation = canvasRotation\n  strokes.forEach(stroke => {\n    // Rotate if necessary.\n    const rotationAdjustment = currentRotation - stroke.rotation\n    if (rotationAdjustment) {\n      rotateCanvas(ctx, rotationAdjustment)\n      currentRotation = stroke.rotation\n    }\n\n    // Draw the stroke\n    switch (stroke.type) {\n      case 'curve': {\n        const { start, firstControl, secondControl, end } = stroke\n        ctx.moveTo(start.x, start.y)\n        ctx.bezierCurveTo(firstControl.x, firstControl.y, secondControl.x, secondControl.y, end.x, end.y)\n        ctx.stroke()\n        break\n      }\n      case 'line': {\n        const { start, end } = stroke\n        ctx.moveTo(start.x, start.y)\n        ctx.lineTo(end.x, end.y)\n        ctx.stroke()\n        break\n      }\n      default:\n    }\n  })\n\n  // Reset rotation if necessary\n  const rotationAdjustmentReset = currentRotation - canvasRotation\n  if (rotationAdjustmentReset) {\n    rotateCanvas(ctx, rotationAdjustmentReset)\n  }\n}\n\nconst Drawing = forwardRef(({ generateSuggestion, rotation }, sketchElement) => {\n  const [mouseDown, setMouseDown] = useState(false)\n  const [pointState, setPointState] = useState({})\n\n  const [strokes, addStroke] = useReducer((state, action) => {\n    return [...state, action]\n  }, [])\n  const [drawnIndex, setDrawnIndex] = useState(0)\n\n  // Handle new strokes and redraws.\n  useEffect(() => {\n    // Short circuit if there are no strokes to draw.\n    if (drawnIndex === strokes.length) {\n      return\n    }\n\n    // Get the canvas context.\n    const ctx = sketchElement.current.getContext('2d')\n\n    // Calculate the undrawn strokes.\n    const undrawnStrokes = strokes.slice(drawnIndex)\n\n    // Draw the strokes.\n    drawStrokes(ctx, undrawnStrokes, rotation)\n\n    // Update the drawn index.\n    setDrawnIndex(strokes.length)\n  }, [strokes, sketchElement, drawnIndex, rotation])\n\n  // Handle rotations.\n  useEffect(() => {\n    const ctx = sketchElement.current.getContext('2d')\n\n    // Clear canvas.\n    ctx.fillStyle = 'white'\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n\n    // Redraw the image.\n    setDrawnIndex(0)\n  }, [rotation, sketchElement])\n\n  const startNewSquiggle = useCallback(() => {\n    // Scale canvas to the same ratio as its pixel size.\n    const canvas = sketchElement.current\n    const { width, height } = canvas.getBoundingClientRect()\n    canvas.setAttribute('width', width * SCALAR)\n    canvas.setAttribute('height', height * SCALAR)\n\n    // Clear canvas.\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, width * SCALAR, height * SCALAR)\n\n    // Set stroke style.\n    ctx.strokeStyle = 'black'\n    ctx.lineWidth = 3 * SCALAR\n    ctx.lineCap = 'smooth'\n\n    // Draw squiggle.\n    const squiggleInfo = generateRandomSquiggle(width, height)\n    squiggleInfo.forEach(squiggle => {\n      addStroke(squiggle)\n    })\n\n    // Generate a new suggestion.\n    generateSuggestion()\n  }, [sketchElement, generateSuggestion])\n\n  // Reset the canvas on window resize to avoid weird offset issues.\n  // It's not the optimal solution, but prevents a pretty confusing bug.\n  // It's disabled for now because it also causes confusing behavior.\n  // useEffect(() => {\n  //   const resizeHandler = () => {\n  //     fixCanvasScale()\n  //     startNewSquiggle()\n  //   }\n  //\n  //   window.addEventListener('resize', resizeHandler)\n  //   return () => {\n  //     window.removeEventListener('resize', resizeHandler)\n  //   }\n  // })\n\n  useEffect(() => {\n    startNewSquiggle()\n  }, [startNewSquiggle])\n\n  const onMouseDown = (event) => {\n    setMouseDown(true)\n    const point = getPoint(sketchElement, event.pageX, event.pageY)\n    setPointState({ b: point, c: point, d: point })\n  }\n\n  const onMouseMove = (event) => {\n    if (mouseDown) {\n      const newPointState = { a: pointState.b, b: pointState.c, c: pointState.d, d: getPoint(sketchElement, event.pageX, event.pageY) }\n      const curveInfo = smoothCurve(newPointState)\n      addStroke({ type: 'curve', ...curveInfo, rotation })\n      setPointState(newPointState)\n    }\n  }\n\n  const onMouseUp = (event) => {\n    onMouseMove(event)\n    onMouseMove(event)\n    setMouseDown(false)\n  }\n\n  const onTouchStart = (event) => {\n    setMouseDown(true)\n    const x = event?.changedTouches?.[0]?.pageX\n    const y = event?.changedTouches?.[0]?.pageY\n    const point = getPoint(sketchElement, x, y)\n    setPointState({ b: point, c: point, d: point })\n  }\n\n  const onTouchMove = (event) => {\n    if (event.touches.length > 1) {\n      return\n    }\n    if (mouseDown) {\n      const x = event?.changedTouches?.[0]?.pageX\n      const y = event?.changedTouches?.[0]?.pageY\n      const newPointState = { a: pointState.b, b: pointState.c, c: pointState.d, d: getPoint(sketchElement, x, y) }\n      const curveInfo = smoothCurve(newPointState)\n      addStroke({ type: 'curve', ...curveInfo, rotation })\n      setPointState(newPointState)\n    }\n  }\n\n  const onTouchEnd = (event) => {\n    onTouchMove(event)\n    onTouchMove(event)\n    setMouseDown(false)\n  }\n\n  return (\n    <div className={styles.drawingArea}>\n      <canvas ref={sketchElement}\n              className={styles.canvas}\n              onMouseDown={onMouseDown}\n              onMouseMove={onMouseMove}\n              onMouseUp={onMouseUp}\n              onMouseLeave={onMouseUp}\n              onTouchStart={onTouchStart}\n              onTouchMove={onTouchMove}\n              onTouchEnd={onTouchEnd}\n      />\n    </div>\n  )\n})\n\nexport default Drawing","import { useRef, useState, useEffect, useCallback } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Controls from './Controls'\nimport suggestions from '../suggestions.json'\nimport RotateRightIcon from '@material-ui/icons/RotateRight'\nimport Drawing from './Drawing'\nimport styles from './Main.module.css'\n\nexport default function Main() {\n  const [suggestion, setSuggestion] = useState(null)\n  const sketchElement = useRef()\n\n  const [showSuggestionSwitch, setShowSuggestionSwitch] = useState(false)\n  const [showSuggestion, setShowSuggestion] = useState(true)\n  const setShowSuggestionLocalStorage = (shouldShow) => {\n    setShowSuggestion(shouldShow)\n    window.localStorage.setItem('showSuggestion', shouldShow)\n  }\n\n  const generateSuggestion = useCallback(() => {\n    const noun = suggestions[Math.floor(Math.random() * suggestions.length)]\n    setSuggestion(noun)\n  }, [])\n\n  useEffect(() => {\n    const localStorageShowSuggestion = window.localStorage.getItem('showSuggestion')\n    const shouldShow = localStorageShowSuggestion !== null ? localStorageShowSuggestion === 'true' : true\n    setShowSuggestion(shouldShow)\n    setShowSuggestionSwitch(true)\n    generateSuggestion()\n  }, [setShowSuggestion, generateSuggestion])\n\n  const [drawingKey, setDrawingKey] = useState('0')\n  const getSquiggles = () => {\n    // Reset the Drawing element by forcing it to rerender.\n    setDrawingKey(drawingKey + 1)\n    setRotation(0)\n  }\n\n  const [rotation, setRotation] = useState(0)\n  const rotate = () => {\n    setRotation((rotation + 90) % 360)\n  }\n\n  return (\n    <div className={styles.main}>\n      <Container>\n        <Controls showSuggestionSwitch={showSuggestionSwitch} showSuggestion={showSuggestion} setShowSuggestion={setShowSuggestionLocalStorage} getSquiggles={getSquiggles} />\n      </Container>\n      <Container className={styles.container}>\n        <Drawing ref={sketchElement} generateSuggestion={generateSuggestion} key={drawingKey} rotation={rotation} />\n        <div className={styles.buttonContainer}>\n          <div className={styles.rotateButtonDiv}>\n            <Fab className={styles.rotateButton} size='small' onClick={rotate}>\n              <RotateRightIcon />\n            </Fab>\n          </div>\n          {\n            showSuggestion && suggestion &&\n            <Fab variant='extended' color='primary' onClick={generateSuggestion}>\n              Draw <span className={styles.suggestionText}>{suggestion}</span>\n            </Fab>\n          }\n          <div className={styles.emptySide} />\n        </div>\n      </Container>\n    </div>\n  )\n}\n","export default function Logo() {\n  return (\n  <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M17.0934 2.94646C17.0934 2.94646 10.2988 1.42683 8.75689 4.67678C7.46154 7.40707 12.4104 10.0948 10.4488 12.2908C8.4618 14.5152 5.81458 8.5606 3.48503 10.3313C1.03328 12.1949 3.04302 18.7009 3.04302 18.7009\" stroke=\"#4DD0E1\" strokeWidth=\"2\"/>\n  </svg>\n  )\n}","export default __webpack_public_path__ + \"static/media/instructions1.2156b3f2.svg\";","export default __webpack_public_path__ + \"static/media/instructions2.90be4561.svg\";","import { useState, useEffect } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport onboarding1 from '../images/instructions1.svg'\nimport onboarding2 from '../images/instructions2.svg'\n\nconst StyledDialogContent = withStyles({\n  root: {\n    padding: 0,\n  },\n})(DialogContent)\n\nconst StyledDialogTitle = withStyles(() => ({\n  root: {\n    padding: 0\n  }\n}))(DialogTitle)\n\nexport default function Instructions({ isOpen, setIsOpen }) {\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    const shown =  localStorage.getItem('instructionsShown')\n    if (!shown) {\n      setIsOpen(true)\n    }\n  })\n\n  let img = onboarding1\n  let title = 'Welcome to Squiggler!'\n  let copy = 'Kickstart your creativity with simple design exercises that will open your mind and test your imagination'\n  if (page === 2) {\n    img = onboarding2\n    title = 'How it Works.'\n    copy = \"It's simple! Generate a line and then use your creative power to finish the picture. Draw whatever comes to mind. There are no rules.\"\n  }\n\n  return (\n    <Dialog open={isOpen} onBackdropClick={() => setIsOpen(false)}>\n      <StyledDialogContent>\n        <img style={{marginTop: '-20px'}} src={img} width='100%' alt='instructions' />\n      </StyledDialogContent>\n      <DialogActions disableSpacing={true}>\n        <div>\n          <StyledDialogTitle>{title}</StyledDialogTitle>\n          <Typography gutterBottom={true} style={{fontSize: '.9rem'}}>{copy}</Typography>\n        </div>\n        <div>\n          <Button variant='contained' color='secondary' onClick={() => {\n            if (page === 1) {\n              setPage(2)\n            } else {\n              localStorage.setItem('instructionsShown', true)\n              setIsOpen(false)\n              setTimeout(() => {\n                setPage(1)\n              }, 500)\n            }\n          }}>Continue</Button>\n        </div>\n      </DialogActions>\n    </Dialog>\n  )\n}","import { useState } from 'react'\nimport styles from './App.module.css'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Main from './components/Main'\nimport Logo from './components/Logo'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport Instructions from './components/Instructions'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4DD0E1',\n      dark: '#00ACC1'\n    },\n    secondary: {\n      main: '#FFEB3B',\n      dark: '#FDD835'\n    }\n  },\n})\n\nexport default function App() {\n  const [instructionsOpen, setInstructionsOpen] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={styles.app}>\n        <div className={styles.header}>\n          <AppBar color='transparent' position='relative'>\n            <Toolbar>\n              <div className={styles.headerText}>\n                <Logo />\n                squiggler\n              </div>\n              <IconButton onClick={() => setInstructionsOpen(true)}>\n                <HelpOutlineIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div className={styles.main}>\n          <Main />\n        </div>\n      </div>\n    <Instructions isOpen={instructionsOpen} setIsOpen={setInstructionsOpen} />\n    </ThemeProvider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}